@R2
M=0 //ATRIBUI ZERO PARA R2 (Q)

@R3
M=0 //ATRIBUI ZERO PARA R3 (R)

@R1
D=M 

@DIVISIONBYZERO
D; JEQ 		//O PROGRAMA VERIFICA SE O DENOMINADOR EH ZERO CASO SEJA VAI PARA (DIVISION_ZERO)


(DIVIDE)

	@R1
	D=M

	@DIVIDE_DEN_NEGATIVO
	D; JLT			//VERIFICA SE O DENOMINADOR EH MENOR QUE ZERO

	@R0
	D=M
	
	@DIVIDE_NUM_NEGATIVO
	D; JLT			//VERIFICA SE O NUMERADOR EH MENOR QUE ZERO

	@R0
	D=M
	
	@R3
	M=D	//ATRIBUI O VALOR DO NUMERADOR PARA O RESTO

	@LOOP
	0;JMP	


(DIVIDE_DEN_NEGATIVO)		//(Q, R) =: DIVIDE(N, -D)

	@R1
	M=-M 	//INVERTE O SINAL DO DENOMINADOR

	@R0
	D=M

	@DIVIDE_NUM_DEN_NEGATIVO
	D; JLT			//COMO NAO FOI VERIFICADO ANTES

	@R0
	D=M
	
	@R3
	M=D	//ATRIBUI O VALOR DO NUMERADOR PARA O RESTO

	@LOOP_D_NEGATIVO
	0; JMP			
	

(DIVIDE_NUM_NEGATIVO)		//(Q, R) =: DIVIDE(-N, D)

	@R0
	M=-M

	@R0
	D=M
	
	@R3
	M=D	//ATRIBUI O VALOR DO NUMERADOR PARA O RESTO

	@LOOP_N_NEGATIVO
	0;JMP	


(DIVIDE_NUM_DEN_NEGATIVO)

	@R0
	M=-M

	@R0
	D=M
	
	@R3
	M=D	//ATRIBUI O VALOR DO NUMERADOR PARA O RESTO

	@LOOP_N_D_NEGATIVO
	0; JMP


(LOOP)

	@R1
	D=M
	
	@R3
	D=D-M	//VERIFICA SE O RESTO EH MAIOR QUE O DENOMINADOR

	@END
	D; JGT

	@R2
	M=M+1	//ADICIONA UM NO QUOCIENTE

	@R1
	D=M

	@R3
	M=M-D 	//SUBTRAI O VALOR DO DENOMINADOR DO RESTO

	@LOOP
	0; JMP


(LOOP_N_NEGATIVO)
	
	@R1
	D=M
	
	@R3
	D=D-M	//VERIFICA SE O RESTO EH MAIOR QUE O DENOMINADOR

	@RETORNA_N_NEGATIVO
	D; JGT

	@R2
	M=M+1	//ADICIONA UM NO QUOCIENTE

	@R1
	D=M

	@R3
	M=M-D 	//SUBTRAI O VALOR DO DENOMINADOR DO RESTO

	@LOOP_N_NEGATIVO
	0; JMP


(LOOP_D_NEGATIVO)

	@R1
	D=M
	
	@R3
	D=D-M	//VERIFICA SE O RESTO EH MAIOR QUE O DENOMINADOR

	@RETORNA_D_NEGATIVO
	D; JGT

	@R2
	M=M+1	//ADICIONA UM NO QUOCIENTE

	@R1
	D=M

	@R3
	M=M-D 	//SUBTRAI O VALOR DO DENOMINADOR DO RESTO

	@LOOP_D_NEGATIVO
	0; JMP


(LOOP_N_D_NEGATIVO)

	@R1
	D=M
	
	@R3
	D=D-M	//VERIFICA SE O RESTO EH MAIOR QUE O DENOMINADOR

	@RETORNA_N_D_NEGATIVO
	D; JGT

	@R2
	M=M+1	//ADICIONA UM NO QUOCIENTE

	@R1
	D=M

	@R3
	M=M-D 	//SUBTRAI O VALOR DO DENOMINADOR DO RESTO

	@LOOP_N_D_NEGATIVO
	0; JMP


(RETORNA_D_NEGATIVO)

	@R2
	M=-M	//Q=-Q

	@R1
	M=-M

	@END
	0;JMP


(RETORNA_N_NEGATIVO)

	@R0
	M=-M

	@R2
	M=-M	//Q=-Q

	@R3
	D=M

	@END
	D; JEQ			//VERIFICA SE O RESTO EH ZERO
	
	@R1
	D=M

	@R2
	M=M-1 	//Q=-Q-1

	@R3
	M=D-M	//R=D-R

	@R0
	M=-M

	@R0
	M=-M

	@END
	0;JMP


(RETORNA_N_NEGATIVO_RESTO_0)

	@END
	0; JMP


(RETORNA_N_D_NEGATIVO)

	@R0
	M=-M

	@R1
	M=-M

	@R3
	D=M
	
	@RETORNA_N_D_NEGATIVO_RESTO_0
	D; JEQ

	@R2
	M=M+1

	@END
	0; JMP


(RETORNA_N_D_NEGATIVO_RESTO_0)
	
	@END
	0; JMP


(DIVISIONBYZERO)

	@32767
	D=A

	@R3
	M=D

	@END
	0; JMP


(END)

	@END
	0; JMP //FINALIZA O PROGRAMA
	